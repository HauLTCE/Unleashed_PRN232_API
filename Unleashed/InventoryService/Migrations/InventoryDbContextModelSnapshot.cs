// <auto-generated />
using System;
using InventoryService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryService.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryService.Models.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("ProviderAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("provider_address");

                    b.Property<DateTimeOffset?>("ProviderCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("provider_created_at");

                    b.Property<string>("ProviderEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("provider_email");

                    b.Property<string>("ProviderImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("provider_image_url");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("provider_name");

                    b.Property<string>("ProviderPhone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("provider_phone");

                    b.Property<DateTimeOffset?>("ProviderUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("provider_updated_at");

                    b.HasKey("ProviderId")
                        .HasName("provider_pkey");

                    b.ToTable("provider");
                });

            modelBuilder.Entity("InventoryService.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stock_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<string>("StockAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("stock_address");

                    b.Property<string>("StockName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("stock_name");

                    b.HasKey("StockId")
                        .HasName("stock_pkey");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("InventoryService.Models.StockVariation", b =>
                {
                    b.Property<int>("StockId")
                        .HasColumnType("int")
                        .HasColumnName("stock_id");

                    b.Property<int>("VariationId")
                        .HasColumnType("int")
                        .HasColumnName("variation_id");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("stock_quantity");

                    b.HasKey("StockId", "VariationId")
                        .HasName("stock_variation_pkey");

                    b.ToTable("stock_variation");
                });

            modelBuilder.Entity("InventoryService.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<Guid?>("InchargeEmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("incharge_employee_id");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int")
                        .HasColumnName("provider_id");

                    b.Property<int?>("StockId")
                        .HasColumnType("int")
                        .HasColumnName("stock_id");

                    b.Property<DateTimeOffset?>("TransactionDate")
                        .HasPrecision(6)
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("transaction_date");

                    b.Property<decimal?>("TransactionProductPrice")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("transaction_product_price");

                    b.Property<int?>("TransactionQuantity")
                        .HasColumnType("int")
                        .HasColumnName("transaction_quantity");

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type_id");

                    b.Property<int?>("VariationId")
                        .HasColumnType("int")
                        .HasColumnName("variation_id");

                    b.HasKey("TransactionId")
                        .HasName("transaction_pkey");

                    b.HasIndex("ProviderId");

                    b.HasIndex("StockId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("InventoryService.Models.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionTypeId"));

                    b.Property<string>("TransactionTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("transaction_type_name");

                    b.HasKey("TransactionTypeId")
                        .HasName("transaction_type_pkey");

                    b.ToTable("transaction_type");
                });

            modelBuilder.Entity("InventoryService.Models.StockVariation", b =>
                {
                    b.HasOne("InventoryService.Models.Stock", "Stock")
                        .WithMany("StockVariations")
                        .HasForeignKey("StockId")
                        .IsRequired()
                        .HasConstraintName("stock_variation_stock_id_fkey");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("InventoryService.Models.Transaction", b =>
                {
                    b.HasOne("InventoryService.Models.Provider", "Provider")
                        .WithMany("Transactions")
                        .HasForeignKey("ProviderId")
                        .HasConstraintName("transaction_provider_id_fkey");

                    b.HasOne("InventoryService.Models.Stock", "Stock")
                        .WithMany("Transactions")
                        .HasForeignKey("StockId")
                        .HasConstraintName("transaction_stock_id_fkey");

                    b.HasOne("InventoryService.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("transaction_transaction_type_id_fkey");

                    b.Navigation("Provider");

                    b.Navigation("Stock");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("InventoryService.Models.Provider", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InventoryService.Models.Stock", b =>
                {
                    b.Navigation("StockVariations");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("InventoryService.Models.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
