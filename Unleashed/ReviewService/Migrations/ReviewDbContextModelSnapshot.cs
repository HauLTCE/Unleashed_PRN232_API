// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewService.Data;

#nullable disable

namespace ReviewService.Migrations
{
    [DbContext(typeof(ReviewDbContext))]
    partial class ReviewDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReviewService.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("comment_content");

                    b.Property<DateTimeOffset?>("CommentCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("comment_created_at");

                    b.Property<DateTimeOffset?>("CommentUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("comment_updated_at");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    b.HasKey("CommentId")
                        .HasName("comment_pkey");

                    b.HasIndex("ReviewId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("ReviewService.Models.CommentParent", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    b.Property<int>("CommentParentId")
                        .HasColumnType("int")
                        .HasColumnName("comment_parent_id");

                    b.HasKey("CommentId", "CommentParentId");

                    b.HasIndex("CommentParentId");

                    b.ToTable("comment_parent");
                });

            modelBuilder.Entity("ReviewService.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<Guid>("OrderId")
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<int?>("ReviewRating")
                        .HasColumnType("int")
                        .HasColumnName("review_rating");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("ReviewId")
                        .HasName("review_pkey");

                    b.ToTable("review");
                });

            modelBuilder.Entity("ReviewService.Models.Comment", b =>
                {
                    b.HasOne("ReviewService.Models.Review", "Review")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId")
                        .HasConstraintName("comment_review_id_fkey");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("ReviewService.Models.CommentParent", b =>
                {
                    b.HasOne("ReviewService.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("comment_parent_comment_id_fkey");

                    b.HasOne("ReviewService.Models.Comment", "CommentParentNavigation")
                        .WithMany()
                        .HasForeignKey("CommentParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("comment_parent_comment_parent_id_fkey");

                    b.Navigation("Comment");

                    b.Navigation("CommentParentNavigation");
                });

            modelBuilder.Entity("ReviewService.Models.Review", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
