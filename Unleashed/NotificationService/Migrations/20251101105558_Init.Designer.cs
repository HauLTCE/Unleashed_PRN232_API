// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationService.Data;

#nullable disable

namespace NotificationService.Migrations
{
    [DbContext(typeof(NotificationDbContext))]
    [Migration("20251101105558_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotificationService.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<bool?>("IsNotificationDraft")
                        .HasColumnType("bit")
                        .HasColumnName("is_notification_draft");

                    b.Property<string>("NotificationContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notification_content");

                    b.Property<DateTimeOffset?>("NotificationCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("notification_created_at");

                    b.Property<string>("NotificationTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("notification_title");

                    b.Property<DateTimeOffset?>("NotificationUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("notification_updated_at");

                    b.Property<Guid?>("UserIdSender")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id_sender");

                    b.HasKey("NotificationId")
                        .HasName("notification_pkey");

                    b.ToTable("notification");
                });

            modelBuilder.Entity("NotificationService.Models.NotificationUser", b =>
                {
                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("notification_id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.Property<bool?>("IsNotificationDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_notification_deleted");

                    b.Property<bool?>("IsNotificationViewed")
                        .HasColumnType("bit")
                        .HasColumnName("is_notification_viewed");

                    b.HasKey("NotificationId", "UserId")
                        .HasName("notification_user_pkey");

                    b.ToTable("notification_user");
                });

            modelBuilder.Entity("NotificationService.Models.NotificationUser", b =>
                {
                    b.HasOne("NotificationService.Models.Notification", "Notification")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("notification_user_notification_id_fkey");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("NotificationService.Models.Notification", b =>
                {
                    b.Navigation("NotificationUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
