// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderService.Data;

#nullable disable

namespace OrderService.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<Guid?>("InchargeEmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("incharge_employee_id");

                    b.Property<string>("OrderBillingAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("order_billing_address");

                    b.Property<DateTimeOffset?>("OrderCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("order_created_at");

                    b.Property<DateTimeOffset?>("OrderDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("order_date");

                    b.Property<DateTime?>("OrderExpectedDeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("order_expected_delivery_date");

                    b.Property<string>("OrderNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("order_note");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("int")
                        .HasColumnName("order_status_id");

                    b.Property<decimal?>("OrderTax")
                        .HasColumnType("numeric(3, 2)")
                        .HasColumnName("order_tax");

                    b.Property<decimal?>("OrderTotalAmount")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("order_total_amount");

                    b.Property<string>("OrderTrackingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("order_tracking_number");

                    b.Property<string>("OrderTransactionReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("order_transaction_reference");

                    b.Property<DateTimeOffset?>("OrderUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("order_updated_at");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("payment_method_id");

                    b.Property<int?>("ShippingMethodId")
                        .HasColumnType("int")
                        .HasColumnName("shipping_method_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("order_pkey");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ShippingMethodId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("OrderService.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderStatusId"));

                    b.Property<string>("OrderStatusName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("order_status_name");

                    b.HasKey("OrderStatusId")
                        .HasName("order_status_pkey");

                    b.ToTable("order_status");
                });

            modelBuilder.Entity("OrderService.Models.OrderVariation", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasMaxLength(255)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_id");

                    b.Property<int>("VariationId")
                        .HasColumnType("int")
                        .HasColumnName("variation_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    b.Property<decimal>("VariationPriceAtPurchase")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("variation_price_at_purchase");

                    b.HasKey("OrderId", "VariationId")
                        .HasName("order_variation_pkey");

                    b.ToTable("order_variation");
                });

            modelBuilder.Entity("OrderService.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_method_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("PaymentMethodName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("payment_method_name");

                    b.HasKey("PaymentMethodId")
                        .HasName("payment_method_pkey");

                    b.ToTable("payment_method");
                });

            modelBuilder.Entity("OrderService.Models.ShippingMethod", b =>
                {
                    b.Property<int>("ShippingMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipping_method_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingMethodId"));

                    b.Property<string>("ShippingMethodName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("shipping_method_name");

                    b.HasKey("ShippingMethodId")
                        .HasName("shipping_method_pkey");

                    b.ToTable("shipping_method");
                });

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.HasOne("OrderService.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("order_order_status_id_fkey");

                    b.HasOne("OrderService.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentMethodId")
                        .HasConstraintName("order_payment_method_id_fkey");

                    b.HasOne("OrderService.Models.ShippingMethod", "ShippingMethod")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingMethodId")
                        .HasConstraintName("order_shipping_method_id_fkey");

                    b.Navigation("OrderStatus");

                    b.Navigation("PaymentMethod");

                    b.Navigation("ShippingMethod");
                });

            modelBuilder.Entity("OrderService.Models.OrderVariation", b =>
                {
                    b.HasOne("OrderService.Models.Order", "Order")
                        .WithMany("OrderVariations")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("order_variation_id_fkey");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Navigation("OrderVariations");
                });

            modelBuilder.Entity("OrderService.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderService.Models.PaymentMethod", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderService.Models.ShippingMethod", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
