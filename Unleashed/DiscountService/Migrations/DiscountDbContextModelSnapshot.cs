// <auto-generated />
using System;
using DiscountService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscountService.Migrations
{
    [DbContext(typeof(DiscountDbContext))]
    partial class DiscountDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscountService.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("discount_code");

                    b.Property<DateTimeOffset?>("DiscountCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("discount_created_at");

                    b.Property<string>("DiscountDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("discount_description");

                    b.Property<DateTimeOffset?>("DiscountEndDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("discount_end_date");

                    b.Property<decimal?>("DiscountMaximumValue")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("discount_maximum_value");

                    b.Property<decimal?>("DiscountMinimumOrderValue")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("discount_minimum_order_value");

                    b.Property<int?>("DiscountRankRequirement")
                        .HasColumnType("int")
                        .HasColumnName("discount_rank_requirement");

                    b.Property<DateTimeOffset?>("DiscountStartDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("discount_start_date");

                    b.Property<int?>("DiscountStatusId")
                        .HasColumnType("int")
                        .HasColumnName("discount_status_id");

                    b.Property<int?>("DiscountTypeId")
                        .HasColumnType("int")
                        .HasColumnName("discount_type_id");

                    b.Property<DateTimeOffset?>("DiscountUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("discount_updated_at");

                    b.Property<int?>("DiscountUsageCount")
                        .HasColumnType("int")
                        .HasColumnName("discount_usage_count");

                    b.Property<int?>("DiscountUsageLimit")
                        .HasColumnType("int")
                        .HasColumnName("discount_usage_limit");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("discount_value");

                    b.HasKey("DiscountId")
                        .HasName("discount_pkey");

                    b.HasIndex("DiscountStatusId");

                    b.HasIndex("DiscountTypeId");

                    b.ToTable("discount");
                });

            modelBuilder.Entity("DiscountService.Models.DiscountStatus", b =>
                {
                    b.Property<int>("DiscountStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountStatusId"));

                    b.Property<string>("DiscountStatusName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("discount_status_name");

                    b.HasKey("DiscountStatusId")
                        .HasName("discount_status_pkey");

                    b.ToTable("discount_status");
                });

            modelBuilder.Entity("DiscountService.Models.DiscountType", b =>
                {
                    b.Property<int>("DiscountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountTypeId"));

                    b.Property<string>("DiscountTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("discount_type_name");

                    b.HasKey("DiscountTypeId")
                        .HasName("discount_type_pkey");

                    b.ToTable("discount_type");
                });

            modelBuilder.Entity("DiscountService.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<DateTimeOffset?>("SaleCreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("sale_created_at");

                    b.Property<DateTimeOffset?>("SaleEndDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("sale_end_date");

                    b.Property<DateTimeOffset?>("SaleStartDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("sale_start_date");

                    b.Property<int?>("SaleStatusId")
                        .HasColumnType("int")
                        .HasColumnName("sale_status_id");

                    b.Property<int?>("SaleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("sale_type_id");

                    b.Property<DateTimeOffset?>("SaleUpdatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("sale_updated_at");

                    b.Property<decimal?>("SaleValue")
                        .HasColumnType("decimal(22, 2)")
                        .HasColumnName("sale_value");

                    b.HasKey("SaleId")
                        .HasName("sale_pkey");

                    b.HasIndex("SaleStatusId");

                    b.HasIndex("SaleTypeId");

                    b.ToTable("sale");
                });

            modelBuilder.Entity("DiscountService.Models.SaleProduct", b =>
                {
                    b.Property<int>("SaleId")
                        .HasColumnType("int")
                        .HasColumnName("sale_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.HasKey("SaleId", "ProductId")
                        .HasName("sale_product_pkey");

                    b.ToTable("sale_product");
                });

            modelBuilder.Entity("DiscountService.Models.SaleStatus", b =>
                {
                    b.Property<int>("SaleStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sale_status_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleStatusId"));

                    b.Property<string>("SaleStatusName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sale_status_name");

                    b.HasKey("SaleStatusId")
                        .HasName("sale_status_pkey");

                    b.ToTable("sale_status");
                });

            modelBuilder.Entity("DiscountService.Models.SaleType", b =>
                {
                    b.Property<int>("SaleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sale_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleTypeId"));

                    b.Property<string>("SaleTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sale_type_name");

                    b.HasKey("SaleTypeId")
                        .HasName("sale_type_pkey");

                    b.ToTable("sale_type");
                });

            modelBuilder.Entity("DiscountService.Models.UserDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.Property<DateTimeOffset?>("DiscountUsedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("discount_used_at");

                    b.Property<bool>("IsDiscountUsed")
                        .HasColumnType("bit")
                        .HasColumnName("is_discount_used");

                    b.HasKey("DiscountId", "UserId")
                        .HasName("user_discount_pkey");

                    b.ToTable("user_discount");
                });

            modelBuilder.Entity("DiscountService.Models.Discount", b =>
                {
                    b.HasOne("DiscountService.Models.DiscountStatus", "DiscountStatus")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountStatusId")
                        .HasConstraintName("discount_discount_status_id_fkey");

                    b.HasOne("DiscountService.Models.DiscountType", "DiscountType")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountTypeId")
                        .HasConstraintName("discount_discount_type_id_fkey");

                    b.Navigation("DiscountStatus");

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("DiscountService.Models.Sale", b =>
                {
                    b.HasOne("DiscountService.Models.SaleStatus", "SaleStatus")
                        .WithMany("Sales")
                        .HasForeignKey("SaleStatusId")
                        .HasConstraintName("sale_sale_status_id_fkey");

                    b.HasOne("DiscountService.Models.SaleType", "SaleType")
                        .WithMany("Sales")
                        .HasForeignKey("SaleTypeId")
                        .HasConstraintName("sale_sale_type_id_fkey");

                    b.Navigation("SaleStatus");

                    b.Navigation("SaleType");
                });

            modelBuilder.Entity("DiscountService.Models.SaleProduct", b =>
                {
                    b.HasOne("DiscountService.Models.Sale", "Sale")
                        .WithMany("SaleProducts")
                        .HasForeignKey("SaleId")
                        .IsRequired()
                        .HasConstraintName("sale_product_sale_id_fkey");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("DiscountService.Models.UserDiscount", b =>
                {
                    b.HasOne("DiscountService.Models.Discount", "Discount")
                        .WithMany("UserDiscounts")
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("user_discount_discount_id_fkey");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("DiscountService.Models.Discount", b =>
                {
                    b.Navigation("UserDiscounts");
                });

            modelBuilder.Entity("DiscountService.Models.DiscountStatus", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("DiscountService.Models.DiscountType", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("DiscountService.Models.Sale", b =>
                {
                    b.Navigation("SaleProducts");
                });

            modelBuilder.Entity("DiscountService.Models.SaleStatus", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DiscountService.Models.SaleType", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
